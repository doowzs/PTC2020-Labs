int floyd(int dis[105][105], int n) {
  int i = 0, j = 0, k = 0;
  int max = 0;
  while (k < n) {
    i = j = 0;
    while (i < n) {
      j = 0;
      while (j < n) {
        if (dis[i][j] > dis[i][k] + dis[k][j]) {
          dis[i][j] = dis[i][k] + dis[k][j];
        }
        j = j + 1;
      }
      i = i + 1;
    }
    k = k + 1;
  }
  i = j = 0;
  while (i < n) {
    j = 0;
    while (j < n) {
      if (dis[i][j] > max && dis[i][j] != 114514) {
        max = dis[i][j];
      }
      j = j + 1;
    }
    i = i + 1;
  }
  return max;
}

int main() {
  int n = 0, m = 0, q = 0;
  int dis[105][105];

  n = read();
  m = read();
  q = read();
  {
    int i = 0, j = 0;
    while (i < n) {
      j = 0;
      while (j < n) {
        if (i == j) {
          dis[i][j] = 0;
        } else
          dis[i][j] = 114514;
        j = j + 1;
      }
      i = i + 1;
    }
  }

  {
    int i = 0;
    int u = 0, v = 0, d = 0;
    while (i < m) {
      u = read();
      v = read();
      d = read();
      dis[u][v] = dis[v][u] = d;
      i = i + 1;
    }
  }

  write(floyd(dis, n));

  {
    int i = 0;
    int u = 0, v = 0;
    while (i < q) {
      u = read();
      v = read();
      write(dis[u][v]);
      i = i + 1;
    }
  }
  return 0;
}
